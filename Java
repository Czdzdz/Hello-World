1、面向对象的特征
  （1）抽象： abstract
        抽象是讲一类对象的共同特征总结出来构造类的过程,包括数据抽象和行为抽象。
        抽象只关注对象有哪些属性和方法,并不关注这些行为的细节是什么.
        在开发中,在抽象类中去定义抽象方法,让实现类去实现具体执行什么操作
  （2）继承： extends
        继承是从已有类得到继承信息创建新类的过程。
        提供继承信息的类被称为父类(超类,基类);得到继承的类被称为子类(派生类);
  （3）封装：
        通常认为封装是把数据和操作数据的方法绑定起来,对数据的访问只能通过已定义的接口。
        我们在类中编写的方法就是对实现细节的一种封装;编写的一个类就是对数据和数据操作的封装。
  （4）多态性：
        多态性是指允许不同子类对象对同一个消息做出不同的响应.简单的说就是用同样的对象引用调用同样的方法但是做了不同的事情。
        多态性分为编译时多态性和运行时多态性.方法的重载（overload）实现的时编译时的多态性;方法的重写（override）实现的是运行时的多态性.
        
        要实现多态需要做两件事：
        ···方法的重写（子类继承父类并重写父类中已有的或抽象的方法）
        ···对象造型（用父类引用引用子类型对象,这样同样的引用调用同样的方法就会根据子类对象的不同而表显出不同的行为）

